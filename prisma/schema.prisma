// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  MASKAPAI
}

model tbl_user {
  id Int @id @default(autoincrement())
  uuid String @unique @default(uuid())
  username String @unique
  name String @db.VarChar(100)
  email String @unique
  password String @db.VarChar(255)
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relasi one-to-one dengan tbl_airlines
  airlines tbl_airlines?
}

model tbl_airlines {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  logo String @db.VarChar(255)
  userId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relasi one-to-one dengan tbl_user
  user tbl_user @relation(fields: [userId], references: [id])

  // relasi one-to-many dengan tbl_flights
  flights tbl_flights[]
}

model tbl_flights {
  id Int @id @default(autoincrement())
  no_penerbangan String
  kota_keberangkatan String
  kota_tujuan String
  waktu_keberangkatan DateTime
  waktu_kedatangan DateTime
  harga Decimal @db.Decimal(10, 2)
  kapasitas_kursi Int
  kursi_tersedia Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relasi one-to-many dengan tbl_airlines
  airlinesId Int
  airlines tbl_airlines @relation(fields: [airlinesId], references: [id])
}